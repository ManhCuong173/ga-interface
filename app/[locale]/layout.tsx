import type { Metadata } from 'next'

import Header from '@/components/header'
import SolanaProvider from '@/providers/solana.provider'
import ReduxStoreProvider from '@/providers/store.provider'
import TanstackProviders from '@/providers/tanstack.provider'
import { NextIntlClientProvider } from 'next-intl'
import { getMessages, unstable_setRequestLocale } from 'next-intl/server'
import Favicon from './../../public/images/favicon.ico'

import BitcoinProviderContext from '@/context/BitcoinProviderContext'
import AuthInitializer from '@/providers/auth-initializer.provider'
import { Updaters } from '@/providers/updaters'
import { Suspense } from 'react'
import { ToastContainer } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'
import { languages } from '../../i18n/setting'
import '../../styles/index.scss'
import './globals.css'

export const metadata: Metadata = {
  title: 'Golden Apple BRC20',
  description: 'Generated by create next app',
  icons: [{ rel: 'icon', url: Favicon.src }],
}

export async function generateStaticParams() {
  return languages.map((locale) => ({ locale }))
}

export default async function RootLayout({
  children,
  params: { locale },
}: Readonly<{
  children: React.ReactNode
  params: never
}>) {
  unstable_setRequestLocale(locale)
  const messages = await getMessages()
  return (
    <html lang={locale}>
      <head>
        <script src="https://www.google.com/recaptcha/api.js" async defer></script>
      </head>
      <body className="bg-[#FAF5F0] bg-full bg-fixed">
        <TanstackProviders>
          <ReduxStoreProvider>
            <AuthInitializer>
              <SolanaProvider>
                <BitcoinProviderContext>
                  <NextIntlClientProvider messages={messages}>
                    <Suspense>
                      <Header />
                      {children}
                      <ToastContainer
                        position="top-right"
                        className="z-[10000]"
                        autoClose={5000}
                        hideProgressBar
                        closeOnClick
                      />
                      <Updaters />
                    </Suspense>
                  </NextIntlClientProvider>
                </BitcoinProviderContext>
              </SolanaProvider>
            </AuthInitializer>
          </ReduxStoreProvider>
        </TanstackProviders>
      </body>
    </html>
  )
}

